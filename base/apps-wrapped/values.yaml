fullnameOverride: "apps"

resources:
  - metadata:
      namespace: ""
      labels: { }
      annotations: { }
    resources:
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: headers
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: apps-headers
          template:
            metadata:
              labels:
                app: apps-headers
            spec:
              volumes:
                - name: config
                  configMap:
                    name: apps-headers
              containers:
                - name: headers
                  image: python:3.11-alpine3.19
                  workingDir: /app
                  volumeMounts:
                    - name: config
                      subPath: main.py
                      mountPath: /app/main.py
                  command:
                    - /bin/sh
                    - -c
                  args:
                    - |
                      pip3 install --upgrade pip
                      pip3 install uvicorn fastapi

                      mkdir -p /app

                      cd /app

                      uvicorn main:app \
                        --host 0.0.0.0 \
                        --port 8080
      - apiVersion: v1
        kind: ConfigMap
        metadata:
          name: headers
        data:
          main.py: |
            from fastapi import FastAPI, Request
            import socket

            app = FastAPI()


            @app.get("/")
            def read_root(request: Request):
                return request.headers
      - apiVersion: v1
        kind: Service
        metadata:
          name: headers
        spec:
          selector:
            app: apps-headers
          ports:
            - protocol: TCP
              port: 8080
              targetPort: 8080
      - apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: headers
          annotations:
            nginx.ingress.kubernetes.io/configuration-snippet: |
              proxy_set_header Forwarded $proxy_add_forwarded;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        spec:
          ingressClassName: nginx-external
          rules:
            - host: headers.sigma.prod.terenowe.seems.cloud
              http:
                paths:
                  - backend:
                      service:
                        name: apps-headers
                        port:
                          number: 8080
                    path: /
                    pathType: Prefix
            - host: headers.sigma.bajojajo.com
              http:
                paths:
                  - backend:
                      service:
                        name: apps-headers
                        port:
                          number: 8080
                    path: /
                    pathType: Prefix